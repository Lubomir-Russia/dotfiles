# Local bashrc by Lubomir
#
# Link this file to your home directory:
# ln -nfs ~/bin/dotfiles/bashrc/bashrc ~/.bashrc
#
# The shell reads one or more startup files. Some of the files are read only when a shell is a
# login shell. Bash reads these files:
# 1. /etc/profile. Executed automatically at login.
# 2. The first file found from this list: ~/.bash_profile, ~/.bash_login, or ~/.profile.
# executed automatically at login.
# 3. /etc/bash.bashrc (which calls inside itself /etc/bash.bashrc.local) and
# the last ~/.bashrc are read by EVERY NONLOGIN shell, so do not put here
# anything that should not go to the not interactive shell. However, if invoked
# as sh, Bash instead reads $ENV, for POSIX compatibility.
# 
# So if any aliases are defined in profile or in bash_profile they will not be
# available in screen session, since screen start a new nonlogin shell.
#
# The getpwnam() and getpwuid() functions are the sources of home directories for ~name
# abbreviations. (On single-user systems, the user database is stored in /etc/passwd.
# However, on networked systems, this information may come from NIS, NIS+, or LDAP, not
# your workstation password file.)
# 
 
alias cd706s='cd /home/c4/testcases/Flare_706_Single/'
alias cdr706s='cd /home/c4/testcases/Flare_706_Single/test_results'
alias cd706d='cd /home/c4/testcases/Flare_706_Dual/'
alias cdr706d='cd /home/c4/testcases/Flare_706_Dual/test_results'
alias cd741='cd /home/c4/testcases/Flare_741/'
alias cdr741='cd /home/c4/testcases/Flare_741/test_results'
alias cd743='cd /home/c4/testcases/Flare_743/'
alias cdr743='cd /home/c4/testcases/Flare_743/test_results'
alias cd740='cd /home/c4/testcases/Flare_740/'
alias cdr740='cd /home/c4/testcases/Flare_740/test_results'
alias cd558='cd /home/c4/testcases/Flare_558/'
alias cdr558='cd /home/c4/testcases/Flare_558/test_results'
alias cd578='cd /home/c4/testcases/Flare_578/'
alias cdr578='cd /home/c4/testcases/Flare_578/test_results'
alias cdf='cd /home/c4/testcases/Flare/'
alias cdr='cd /home/c4/testcases/Flare/test_results'
alias v='vim'
alias vi='vim'
alias r='perl ./run_flare_tests_REVISED.pl '

alias dot='cd ~/bin/dotfiles/'
alias dir='ls -l | grep ^d'

# Let my version of soft have priority
export PATH=~/bin/:$PATH

# Add Flare Tools to execution PATH
export PATH=$PATH:/home/c4/testcases/Tools/
export PATH=/home/c4/Automatos-1.5/bin:/opt/ActivePerl-5.14/site/bin:/opt/ActivePerl-5.14/bin:$PATH

# Let all editing be in Vim (including command line editing be C-x C-e)
export EDITOR=vim

# Project specific
export C4_PARAMETERS=./Neo_settings.txt
export PERL5LIB=/home/c4/perl:$PERL5LIB
export PERL5LIB=/home/c4/Automatos-1.5/lib:/home/c4/Automatos-1.5/Examples:/opt/ActivePerl-5.14/lib:$PERL5LIB

alias pta1='ssh 10.64.74.71' 
alias pta2='ssh 10.64.74.98' 
alias pta3='ssh 10.64.74.83' 
alias e741='ssh root@10.244.245.68' 
alias e743='ssh root@10.244.242.26' 
alias e743b='ssh root@10.244.242.96' 
alias e706='ssh root@10.64.77.113' 
alias e706b='ssh root@10.64.77.114' 
alias s578='ssh root@10.109.17.72' 
alias s578b='ssh root@10.109.17.73' 

alias gst='git status'
alias gl='git pull'
alias gp='git push'
alias gd='git diff | mate'
alias gc='git commit -v'
alias gca='git commit -v -a'
alias gb='git branch'
alias gba='git branch -a'

# export PERL5LIB=/home/c4/perl:/c4shares/auto/tools/LATEST/lib/perl:$PERL5LIB

# Different kinds of PS1

# A nice three line PS1
# export PS1='\n\D{%F %T} \w\n\u@\H\$ '

# Red PS1 if root, light green if not

if test "$UID" -eq 0  ; then
    # _color="\e[31m"
    # _reset="\e[0m"
    _color=$(tput setaf 1; tput bold)
    _reset=$(tput sgr0)
else
    _color=$(tput setaf 2; tput bold)
    _reset=$(tput sgr0)
fi

# Add git info
# The argument to __git_ps1 will be displayed only if you are currently in a
# git repository.  The %s token will be the name of the current branch.

# export PS1='\[$_color\]\D{%F %T} \W $(__git_ps1 "(%s)")\$ \[$_reset\]'
# The \[ and \] symbols allow bash to understand which parts of the prompt cause no cursor movement; without them, lines will wrap incorrectly. 

# As above but in three lines

export PS1='\[$_color\]\n\D{%F %T} \w $(__git_ps1 "(%s)")\n\u@\H\$ \[$_reset\]'

# Prompt with indicator :) or :( depending on result of prev. command
# export PS1='\u@\h `smiley` \w\n\$ '
#    smiley ()
#    {
#        if [ $? = 0 ]; then
#            echo -e ':)';
#            true;
#        else
#            echo -e '\e[31m:(\e[0m';
#            return $?;
#        fi
#    }

# Another colorful PS1
# red=$(tput setaf 1)
# green=$(tput setaf 2)
# blue=$(tput setaf 4)
# reset=$(tput sgr0)
# PS1=’\[$red\]\u\[$reset\]@\[$green\]\h\[$reset\]:\[$blue\]\w\[$reset\]\$ ‘
#    

# FROM COOL bashrc

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).

if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

PATH=/usr/class/cs143/cool/bin:$PATH

export GREP_OPTIONS='--color=auto' # by default match is read on black
#export GREP_COLOR='5;38' # blinking
export GREP_COLOR='1;33' # Yellow on black 

find $HOME/.bak/vim/ -name "*" -type f -mtime +60 -exec rm -f {} \;
# When you are logging in all files in the backup directory older then 60 days will be removed. Be shure to backup in shorter terms!
